ARM GAS  /tmp/ccpwhDhL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccpwhDhL.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "MAX30102.h"
  47:Src/main.c    **** #include "stdio.h"
  48:Src/main.c    **** #include "stdlib.h"
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** #ifdef __GNUC__
  64:Src/main.c    **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  65:Src/main.c    **** #else
  66:Src/main.c    **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  67:Src/main.c    **** #endif
  68:Src/main.c    **** /* USER CODE END PM */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  71:Src/main.c    **** I2C_HandleTypeDef hi2c3;
  72:Src/main.c    **** 
  73:Src/main.c    **** UART_HandleTypeDef huart1;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PV */
  76:Src/main.c    **** PUTCHAR_PROTOTYPE
  77:Src/main.c    **** {
  78:Src/main.c    ****     HAL_UART_Transmit(&huart1 , (uint8_t *)&ch, 1 , 0xffff);
  79:Src/main.c    **** 
  80:Src/main.c    **** //    while ((USART1->SR & 0X40) == 0); //寄存器操作,循环发�??,直到发�?�完�??
  81:Src/main.c    **** //    USART1->DR = (uint8_t) ch;
  82:Src/main.c    ****     return ch;
  83:Src/main.c    **** }
  84:Src/main.c    **** /* USER CODE END PV */
  85:Src/main.c    **** 
  86:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  87:Src/main.c    **** void SystemClock_Config(void);
  88:Src/main.c    **** static void MX_GPIO_Init(void);
  89:Src/main.c    **** static void MX_USART1_UART_Init(void);
ARM GAS  /tmp/ccpwhDhL.s 			page 3


  90:Src/main.c    **** static void MX_I2C3_Init(void);
  91:Src/main.c    **** /* USER CODE BEGIN PFP */
  92:Src/main.c    **** int _write(int fd, char *ptr, int len);
  93:Src/main.c    **** void print_float(float value);
  94:Src/main.c    **** /* USER CODE END PFP */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  97:Src/main.c    **** /* USER CODE BEGIN 0 */
  98:Src/main.c    **** int _write(int fd, char *ptr, int len) 
  99:Src/main.c    **** { 
 100:Src/main.c    ****     int i = 0; /*
 101:Src/main.c    ****      * write "len" of char from "ptr" to file id "fd"
 102:Src/main.c    ****      * Return number of char written.
 103:Src/main.c    ****      *
 104:Src/main.c    ****     * Only work for STDOUT, STDIN, and STDERR
 105:Src/main.c    ****      */ if (fd > 2) { return -1; } while (*ptr && (i < len)) 
 106:Src/main.c    ****       { 
 107:Src/main.c    ****         HAL_UART_Transmit(&huart1,ptr,sizeof(*ptr),10);
 108:Src/main.c    ****         if (*ptr == '\n') 
 109:Src/main.c    ****         { 
 110:Src/main.c    ****           HAL_UART_Transmit(&huart1,(uint8_t*)"\r",2,10);
 111:Src/main.c    ****         } 
 112:Src/main.c    ****         i++; 
 113:Src/main.c    ****         ptr++; 
 114:Src/main.c    ****       } 
 115:Src/main.c    ****       return i; 
 116:Src/main.c    **** }
 117:Src/main.c    **** /* USER CODE END 0 */
 118:Src/main.c    **** 
 119:Src/main.c    **** /**
 120:Src/main.c    ****   * @brief  The application entry point.
 121:Src/main.c    ****   * @retval int
 122:Src/main.c    ****   */
 123:Src/main.c    **** int main(void)
 124:Src/main.c    **** {
 125:Src/main.c    ****   /* USER CODE BEGIN 1 */
 126:Src/main.c    ****   float temp_value = 0.0;
 127:Src/main.c    ****   uint8_t uc_dumpy;
 128:Src/main.c    ****   /* USER CODE END 1 */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 133:Src/main.c    ****   HAL_Init();
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* USER CODE BEGIN Init */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* USER CODE END Init */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Configure the system clock */
 140:Src/main.c    ****   SystemClock_Config();
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE END SysInit */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccpwhDhL.s 			page 4


 147:Src/main.c    ****   MX_GPIO_Init();
 148:Src/main.c    ****   MX_USART1_UART_Init();
 149:Src/main.c    ****   MX_I2C3_Init();
 150:Src/main.c    ****   /* USER CODE BEGIN 2 */
 151:Src/main.c    ****   HAL_Delay(1);
 152:Src/main.c    ****   maxim_max30102_reset();
 153:Src/main.c    ****   maxim_max30102_read_reg(0, &uc_dumpy);  //read and clear status register
 154:Src/main.c    ****   maxim_max30102_init();
 155:Src/main.c    ****   // if(!maxim_max30102_init())  Error_Handler();
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* USER CODE END 2 */
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Infinite loop */
 160:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 161:Src/main.c    ****   while (1)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     /* USER CODE END WHILE */
 164:Src/main.c    **** 
 165:Src/main.c    ****     /* USER CODE BEGIN 3 */
 166:Src/main.c    ****     HAL_Delay(10);
 167:Src/main.c    ****     temp_value = maxim_max30102_read_temperature();
 168:Src/main.c    ****     HAL_UART_Transmit(&huart1, "s\r\n", 4, 10);
 169:Src/main.c    ****     HAL_UART_Transmit(&huart1, &temp_value, sizeof(temp_value), 10);
 170:Src/main.c    ****     HAL_UART_Transmit(&huart1, "e\r\n", 4, 10);
 171:Src/main.c    ****     // temp_value = 20.0112343434;
 172:Src/main.c    ****     printf("Temperature =  \n");
 173:Src/main.c    ****     print_float(temp_value);
 174:Src/main.c    ****     printf("---------\r\n");
 175:Src/main.c    **** 
 176:Src/main.c    ****   }
 177:Src/main.c    ****   /* USER CODE END 3 */
 178:Src/main.c    **** }
 179:Src/main.c    **** 
 180:Src/main.c    **** /**
 181:Src/main.c    ****   * @brief System Clock Configuration
 182:Src/main.c    ****   * @retval None
 183:Src/main.c    ****   */
 184:Src/main.c    **** void SystemClock_Config(void)
 185:Src/main.c    **** {
 186:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 187:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 188:Src/main.c    **** 
 189:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 190:Src/main.c    ****   */
 191:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 192:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 193:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 194:Src/main.c    ****   */
 195:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 196:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 197:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 180;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
ARM GAS  /tmp/ccpwhDhL.s 			page 5


 204:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 205:Src/main.c    ****   {
 206:Src/main.c    ****     Error_Handler();
 207:Src/main.c    ****   }
 208:Src/main.c    ****   /**Activate the Over-Drive mode 
 209:Src/main.c    ****   */
 210:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 215:Src/main.c    ****   */
 216:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 217:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 218:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 219:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 221:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 222:Src/main.c    **** 
 223:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     Error_Handler();
 226:Src/main.c    ****   }
 227:Src/main.c    **** }
 228:Src/main.c    **** 
 229:Src/main.c    **** /**
 230:Src/main.c    ****   * @brief I2C3 Initialization Function
 231:Src/main.c    ****   * @param None
 232:Src/main.c    ****   * @retval None
 233:Src/main.c    ****   */
 234:Src/main.c    **** static void MX_I2C3_Init(void)
 235:Src/main.c    **** {
 236:Src/main.c    **** 
 237:Src/main.c    ****   /* USER CODE BEGIN I2C3_Init 0 */
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* USER CODE END I2C3_Init 0 */
 240:Src/main.c    **** 
 241:Src/main.c    ****   /* USER CODE BEGIN I2C3_Init 1 */
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE END I2C3_Init 1 */
 244:Src/main.c    ****   hi2c3.Instance = I2C3;
 245:Src/main.c    ****   hi2c3.Init.ClockSpeed = 100000;
 246:Src/main.c    ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 247:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 248:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 249:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 250:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 251:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 252:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 253:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    ****   /**Configure Analogue filter 
 258:Src/main.c    ****   */
 259:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 260:Src/main.c    ****   {
ARM GAS  /tmp/ccpwhDhL.s 			page 6


 261:Src/main.c    ****     Error_Handler();
 262:Src/main.c    ****   }
 263:Src/main.c    ****   /**Configure Digital filter 
 264:Src/main.c    ****   */
 265:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 266:Src/main.c    ****   {
 267:Src/main.c    ****     Error_Handler();
 268:Src/main.c    ****   }
 269:Src/main.c    ****   /* USER CODE BEGIN I2C3_Init 2 */
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE END I2C3_Init 2 */
 272:Src/main.c    **** 
 273:Src/main.c    **** }
 274:Src/main.c    **** 
 275:Src/main.c    **** /**
 276:Src/main.c    ****   * @brief USART1 Initialization Function
 277:Src/main.c    ****   * @param None
 278:Src/main.c    ****   * @retval None
 279:Src/main.c    ****   */
 280:Src/main.c    **** static void MX_USART1_UART_Init(void)
 281:Src/main.c    **** {
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 290:Src/main.c    ****   huart1.Instance = USART1;
 291:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 292:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 293:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 294:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 295:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 296:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 297:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 298:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     Error_Handler();
 301:Src/main.c    ****   }
 302:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 303:Src/main.c    **** 
 304:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 305:Src/main.c    **** 
 306:Src/main.c    **** }
 307:Src/main.c    **** 
 308:Src/main.c    **** /**
 309:Src/main.c    ****   * @brief GPIO Initialization Function
 310:Src/main.c    ****   * @param None
 311:Src/main.c    ****   * @retval None
 312:Src/main.c    ****   */
 313:Src/main.c    **** static void MX_GPIO_Init(void)
 314:Src/main.c    **** {
  27              		.loc 1 314 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
ARM GAS  /tmp/ccpwhDhL.s 			page 7


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 315:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 315 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* GPIO Ports Clock Enable */
 318:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 318 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AB4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 319:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 319 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 320:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 320 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
ARM GAS  /tmp/ccpwhDhL.s 			page 8


  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 321:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 321 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 322:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 322 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
 323:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 323 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 324:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 324 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 325:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 325 0
ARM GAS  /tmp/ccpwhDhL.s 			page 9


 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 326:Src/main.c    **** 
 327:Src/main.c    ****   /*Configure GPIO pin Output Level */
 328:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 328 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8348     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 329:Src/main.c    **** 
 330:Src/main.c    ****   /*Configure GPIO pin Output Level */
 331:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 331 0
 149 00be DFF81CA2 		ldr	r10, .L3+24
 150 00c2 2246     		mov	r2, r4
 151 00c4 8021     		movs	r1, #128
 152 00c6 5046     		mov	r0, r10
 153 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL1:
 332:Src/main.c    **** 
 333:Src/main.c    ****   /*Configure GPIO pin Output Level */
 334:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 155              		.loc 1 334 0
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF44051 		mov	r1, #12288
 158 00d2 7E48     		ldr	r0, .L3+8
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 335:Src/main.c    **** 
 336:Src/main.c    ****   /*Configure GPIO pin Output Level */
 337:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 337 0
 162 00d8 2246     		mov	r2, r4
 163 00da 4FF4C041 		mov	r1, #24576
 164 00de 7C48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 338:Src/main.c    **** 
 339:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 340:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin 
 341:Src/main.c    ****                            A7_Pin A8_Pin A9_Pin */
 342:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 167              		.loc 1 342 0
 168 00e4 4FF63F03 		movw	r3, #63551
 169 00e8 0993     		str	r3, [sp, #36]
 343:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin 
 344:Src/main.c    ****                           |A7_Pin|A8_Pin|A9_Pin;
 345:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccpwhDhL.s 			page 10


 170              		.loc 1 345 0
 171 00ea 0225     		movs	r5, #2
 172 00ec 0A95     		str	r5, [sp, #40]
 346:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 346 0
 174 00ee 0B94     		str	r4, [sp, #44]
 347:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 175              		.loc 1 347 0
 176 00f0 0327     		movs	r7, #3
 177 00f2 0C97     		str	r7, [sp, #48]
 348:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 178              		.loc 1 348 0
 179 00f4 0C26     		movs	r6, #12
 180 00f6 0D96     		str	r6, [sp, #52]
 349:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 181              		.loc 1 349 0
 182 00f8 DFF8E491 		ldr	r9, .L3+28
 183 00fc 09A9     		add	r1, sp, #36
 184 00fe 4846     		mov	r0, r9
 185 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 186              	.LVL4:
 350:Src/main.c    **** 
 351:Src/main.c    ****   /*Configure GPIO pins : SPI5_SCK_Pin SPI5_MISO_Pin SPI5_MOSI_Pin */
 352:Src/main.c    ****   GPIO_InitStruct.Pin = SPI5_SCK_Pin|SPI5_MISO_Pin|SPI5_MOSI_Pin;
 187              		.loc 1 352 0
 188 0104 4FF46073 		mov	r3, #896
 189 0108 0993     		str	r3, [sp, #36]
 353:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 190              		.loc 1 353 0
 191 010a 0A95     		str	r5, [sp, #40]
 354:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 192              		.loc 1 354 0
 193 010c 0B94     		str	r4, [sp, #44]
 355:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 194              		.loc 1 355 0
 195 010e 0C94     		str	r4, [sp, #48]
 356:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 196              		.loc 1 356 0
 197 0110 0523     		movs	r3, #5
 198 0112 0D93     		str	r3, [sp, #52]
 357:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 199              		.loc 1 357 0
 200 0114 09A9     		add	r1, sp, #36
 201 0116 4846     		mov	r0, r9
 202 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL5:
 358:Src/main.c    **** 
 359:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 360:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 204              		.loc 1 360 0
 205 011c 4FF48063 		mov	r3, #1024
 206 0120 0993     		str	r3, [sp, #36]
 361:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 207              		.loc 1 361 0
 208 0122 0A95     		str	r5, [sp, #40]
 362:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 209              		.loc 1 362 0
ARM GAS  /tmp/ccpwhDhL.s 			page 11


 210 0124 0B94     		str	r4, [sp, #44]
 363:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 211              		.loc 1 363 0
 212 0126 0C94     		str	r4, [sp, #48]
 364:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 213              		.loc 1 364 0
 214 0128 4FF00E08 		mov	r8, #14
 215 012c CDF83480 		str	r8, [sp, #52]
 365:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 216              		.loc 1 365 0
 217 0130 09A9     		add	r1, sp, #36
 218 0132 4846     		mov	r0, r9
 219 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL6:
 366:Src/main.c    **** 
 367:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 368:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 221              		.loc 1 368 0
 222 0138 4FF00109 		mov	r9, #1
 223 013c CDF82490 		str	r9, [sp, #36]
 369:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 224              		.loc 1 369 0
 225 0140 0A95     		str	r5, [sp, #40]
 370:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 370 0
 227 0142 0B94     		str	r4, [sp, #44]
 371:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 228              		.loc 1 371 0
 229 0144 0C97     		str	r7, [sp, #48]
 372:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 230              		.loc 1 372 0
 231 0146 0D96     		str	r6, [sp, #52]
 373:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 232              		.loc 1 373 0
 233 0148 09A9     		add	r1, sp, #36
 234 014a 5F48     		ldr	r0, .L3+4
 235 014c FFF7FEFF 		bl	HAL_GPIO_Init
 236              	.LVL7:
 374:Src/main.c    **** 
 375:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 376:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 237              		.loc 1 376 0
 238 0150 1623     		movs	r3, #22
 239 0152 0993     		str	r3, [sp, #36]
 377:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 240              		.loc 1 377 0
 241 0154 CDF82890 		str	r9, [sp, #40]
 378:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 242              		.loc 1 378 0
 243 0158 0B94     		str	r4, [sp, #44]
 379:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 244              		.loc 1 379 0
 245 015a 0C94     		str	r4, [sp, #48]
 380:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 246              		.loc 1 380 0
 247 015c 09A9     		add	r1, sp, #36
 248 015e 5A48     		ldr	r0, .L3+4
ARM GAS  /tmp/ccpwhDhL.s 			page 12


 249 0160 FFF7FEFF 		bl	HAL_GPIO_Init
 250              	.LVL8:
 381:Src/main.c    **** 
 382:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 383:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 251              		.loc 1 383 0
 252 0164 48F20703 		movw	r3, #32775
 253 0168 0993     		str	r3, [sp, #36]
 384:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 254              		.loc 1 384 0
 255 016a DFF878B1 		ldr	fp, .L3+32
 256 016e CDF828B0 		str	fp, [sp, #40]
 385:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 257              		.loc 1 385 0
 258 0172 0B94     		str	r4, [sp, #44]
 386:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 259              		.loc 1 386 0
 260 0174 09A9     		add	r1, sp, #36
 261 0176 5046     		mov	r0, r10
 262 0178 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL9:
 387:Src/main.c    **** 
 388:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 389:Src/main.c    ****                            R5_Pin */
 390:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 264              		.loc 1 390 0
 265 017c 41F65803 		movw	r3, #6232
 266 0180 0993     		str	r3, [sp, #36]
 391:Src/main.c    ****                           |R5_Pin;
 392:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 267              		.loc 1 392 0
 268 0182 0A95     		str	r5, [sp, #40]
 393:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 269              		.loc 1 393 0
 270 0184 0B94     		str	r4, [sp, #44]
 394:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 271              		.loc 1 394 0
 272 0186 0C94     		str	r4, [sp, #48]
 395:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 273              		.loc 1 395 0
 274 0188 CDF83480 		str	r8, [sp, #52]
 396:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 275              		.loc 1 396 0
 276 018c 09A9     		add	r1, sp, #36
 277 018e 5046     		mov	r0, r10
 278 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 279              	.LVL10:
 397:Src/main.c    **** 
 398:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 399:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 280              		.loc 1 399 0
 281 0194 8023     		movs	r3, #128
 282 0196 0993     		str	r3, [sp, #36]
 400:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 283              		.loc 1 400 0
 284 0198 CDF82890 		str	r9, [sp, #40]
 401:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccpwhDhL.s 			page 13


 285              		.loc 1 401 0
 286 019c 0B94     		str	r4, [sp, #44]
 402:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 287              		.loc 1 402 0
 288 019e 0C94     		str	r4, [sp, #48]
 403:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 289              		.loc 1 403 0
 290 01a0 09A9     		add	r1, sp, #36
 291 01a2 5046     		mov	r0, r10
 292 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 293              	.LVL11:
 404:Src/main.c    **** 
 405:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 406:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 294              		.loc 1 406 0
 295 01a8 2023     		movs	r3, #32
 296 01aa 0993     		str	r3, [sp, #36]
 407:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 297              		.loc 1 407 0
 298 01ac CDF828B0 		str	fp, [sp, #40]
 408:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 408 0
 300 01b0 0B94     		str	r4, [sp, #44]
 409:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 301              		.loc 1 409 0
 302 01b2 09A9     		add	r1, sp, #36
 303 01b4 4448     		ldr	r0, .L3+4
 304 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 305              	.LVL12:
 410:Src/main.c    **** 
 411:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 412:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 306              		.loc 1 412 0
 307 01ba 0997     		str	r7, [sp, #36]
 413:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 308              		.loc 1 413 0
 309 01bc 0A95     		str	r5, [sp, #40]
 414:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 310              		.loc 1 414 0
 311 01be 0B94     		str	r4, [sp, #44]
 415:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 415 0
 313 01c0 0C94     		str	r4, [sp, #48]
 416:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 314              		.loc 1 416 0
 315 01c2 4FF0090A 		mov	r10, #9
 316 01c6 CDF834A0 		str	r10, [sp, #52]
 417:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 317              		.loc 1 417 0
 318 01ca 09A9     		add	r1, sp, #36
 319 01cc 4148     		ldr	r0, .L3+16
 320 01ce FFF7FEFF 		bl	HAL_GPIO_Init
 321              	.LVL13:
 418:Src/main.c    **** 
 419:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 420:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 322              		.loc 1 420 0
ARM GAS  /tmp/ccpwhDhL.s 			page 14


 323 01d2 4FF0040B 		mov	fp, #4
 324 01d6 CDF824B0 		str	fp, [sp, #36]
 421:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 325              		.loc 1 421 0
 326 01da 0A94     		str	r4, [sp, #40]
 422:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 422 0
 328 01dc 0B94     		str	r4, [sp, #44]
 423:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 329              		.loc 1 423 0
 330 01de 09A9     		add	r1, sp, #36
 331 01e0 3C48     		ldr	r0, .L3+16
 332 01e2 FFF7FEFF 		bl	HAL_GPIO_Init
 333              	.LVL14:
 424:Src/main.c    **** 
 425:Src/main.c    ****   /*Configure GPIO pins : A10_Pin A11_Pin BA0_Pin BA1_Pin 
 426:Src/main.c    ****                            SDCLK_Pin SDNCAS_Pin */
 427:Src/main.c    ****   GPIO_InitStruct.Pin = A10_Pin|A11_Pin|BA0_Pin|BA1_Pin 
 334              		.loc 1 427 0
 335 01e6 48F23313 		movw	r3, #33075
 336 01ea 0993     		str	r3, [sp, #36]
 428:Src/main.c    ****                           |SDCLK_Pin|SDNCAS_Pin;
 429:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 337              		.loc 1 429 0
 338 01ec 0A95     		str	r5, [sp, #40]
 430:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 339              		.loc 1 430 0
 340 01ee 0B94     		str	r4, [sp, #44]
 431:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 341              		.loc 1 431 0
 342 01f0 0C97     		str	r7, [sp, #48]
 432:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 343              		.loc 1 432 0
 344 01f2 0D96     		str	r6, [sp, #52]
 433:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 345              		.loc 1 433 0
 346 01f4 09A9     		add	r1, sp, #36
 347 01f6 3648     		ldr	r0, .L3+12
 348 01f8 FFF7FEFF 		bl	HAL_GPIO_Init
 349              	.LVL15:
 434:Src/main.c    **** 
 435:Src/main.c    ****   /*Configure GPIO pins : D4_Pin D5_Pin D6_Pin D7_Pin 
 436:Src/main.c    ****                            D8_Pin D9_Pin D10_Pin D11_Pin 
 437:Src/main.c    ****                            D12_Pin NBL0_Pin NBL1_Pin */
 438:Src/main.c    ****   GPIO_InitStruct.Pin = D4_Pin|D5_Pin|D6_Pin|D7_Pin 
 350              		.loc 1 438 0
 351 01fc 4FF68373 		movw	r3, #65411
 352 0200 0993     		str	r3, [sp, #36]
 439:Src/main.c    ****                           |D8_Pin|D9_Pin|D10_Pin|D11_Pin 
 440:Src/main.c    ****                           |D12_Pin|NBL0_Pin|NBL1_Pin;
 441:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 353              		.loc 1 441 0
 354 0202 0A95     		str	r5, [sp, #40]
 442:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 355              		.loc 1 442 0
 356 0204 0B94     		str	r4, [sp, #44]
 443:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  /tmp/ccpwhDhL.s 			page 15


 357              		.loc 1 443 0
 358 0206 0C97     		str	r7, [sp, #48]
 444:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 359              		.loc 1 444 0
 360 0208 0D96     		str	r6, [sp, #52]
 445:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 361              		.loc 1 445 0
 362 020a 09A9     		add	r1, sp, #36
 363 020c 3248     		ldr	r0, .L3+20
 364 020e FFF7FEFF 		bl	HAL_GPIO_Init
 365              	.LVL16:
 446:Src/main.c    **** 
 447:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 448:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 366              		.loc 1 448 0
 367 0212 4FF47063 		mov	r3, #3840
 368 0216 0993     		str	r3, [sp, #36]
 449:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 369              		.loc 1 449 0
 370 0218 0A95     		str	r5, [sp, #40]
 450:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 371              		.loc 1 450 0
 372 021a 0B94     		str	r4, [sp, #44]
 451:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 373              		.loc 1 451 0
 374 021c 0C94     		str	r4, [sp, #48]
 452:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 375              		.loc 1 452 0
 376 021e CDF83480 		str	r8, [sp, #52]
 453:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 377              		.loc 1 453 0
 378 0222 09A9     		add	r1, sp, #36
 379 0224 2B48     		ldr	r0, .L3+16
 380 0226 FFF7FEFF 		bl	HAL_GPIO_Init
 381              	.LVL17:
 454:Src/main.c    **** 
 455:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 456:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 382              		.loc 1 456 0
 383 022a 4FF45043 		mov	r3, #53248
 384 022e 0993     		str	r3, [sp, #36]
 457:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 385              		.loc 1 457 0
 386 0230 0A95     		str	r5, [sp, #40]
 458:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 387              		.loc 1 458 0
 388 0232 0B94     		str	r4, [sp, #44]
 459:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 389              		.loc 1 459 0
 390 0234 0C94     		str	r4, [sp, #48]
 460:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 391              		.loc 1 460 0
 392 0236 0D96     		str	r6, [sp, #52]
 461:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 393              		.loc 1 461 0
 394 0238 09A9     		add	r1, sp, #36
 395 023a 2648     		ldr	r0, .L3+16
ARM GAS  /tmp/ccpwhDhL.s 			page 16


 396 023c FFF7FEFF 		bl	HAL_GPIO_Init
 397              	.LVL18:
 462:Src/main.c    **** 
 463:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 464:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 398              		.loc 1 464 0
 399 0240 4FF40053 		mov	r3, #8192
 400 0244 0993     		str	r3, [sp, #36]
 465:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 401              		.loc 1 465 0
 402 0246 0A94     		str	r4, [sp, #40]
 466:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 403              		.loc 1 466 0
 404 0248 0B94     		str	r4, [sp, #44]
 467:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 405              		.loc 1 467 0
 406 024a 09A9     		add	r1, sp, #36
 407 024c 2148     		ldr	r0, .L3+16
 408 024e FFF7FEFF 		bl	HAL_GPIO_Init
 409              	.LVL19:
 468:Src/main.c    **** 
 469:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 470:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 471:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 410              		.loc 1 471 0
 411 0252 4CF20373 		movw	r3, #50947
 412 0256 0993     		str	r3, [sp, #36]
 472:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 473:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 413              		.loc 1 473 0
 414 0258 0A95     		str	r5, [sp, #40]
 474:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 415              		.loc 1 474 0
 416 025a 0B94     		str	r4, [sp, #44]
 475:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 417              		.loc 1 475 0
 418 025c 0C97     		str	r7, [sp, #48]
 476:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 419              		.loc 1 476 0
 420 025e 0D96     		str	r6, [sp, #52]
 477:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 421              		.loc 1 477 0
 422 0260 09A9     		add	r1, sp, #36
 423 0262 1A48     		ldr	r0, .L3+8
 424 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 425              	.LVL20:
 478:Src/main.c    **** 
 479:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 480:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 426              		.loc 1 480 0
 427 0268 4FF40063 		mov	r3, #2048
 428 026c 0993     		str	r3, [sp, #36]
 481:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 429              		.loc 1 481 0
 430 026e 0A94     		str	r4, [sp, #40]
 482:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 431              		.loc 1 482 0
ARM GAS  /tmp/ccpwhDhL.s 			page 17


 432 0270 0B94     		str	r4, [sp, #44]
 483:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 433              		.loc 1 483 0
 434 0272 09A9     		add	r1, sp, #36
 435 0274 1548     		ldr	r0, .L3+8
 436 0276 FFF7FEFF 		bl	HAL_GPIO_Init
 437              	.LVL21:
 484:Src/main.c    **** 
 485:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 486:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 438              		.loc 1 486 0
 439 027a 4FF44053 		mov	r3, #12288
 440 027e 0993     		str	r3, [sp, #36]
 487:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 441              		.loc 1 487 0
 442 0280 CDF82890 		str	r9, [sp, #40]
 488:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 443              		.loc 1 488 0
 444 0284 0B94     		str	r4, [sp, #44]
 489:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 445              		.loc 1 489 0
 446 0286 0C94     		str	r4, [sp, #48]
 490:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 447              		.loc 1 490 0
 448 0288 09A9     		add	r1, sp, #36
 449 028a 1048     		ldr	r0, .L3+8
 450 028c FFF7FEFF 		bl	HAL_GPIO_Init
 451              	.LVL22:
 491:Src/main.c    **** 
 492:Src/main.c    ****   /*Configure GPIO pin : MAX30102_INT_Pin */
 493:Src/main.c    ****   GPIO_InitStruct.Pin = MAX30102_INT_Pin;
 452              		.loc 1 493 0
 453 0290 CDF824B0 		str	fp, [sp, #36]
 494:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 454              		.loc 1 494 0
 455 0294 0A94     		str	r4, [sp, #40]
 495:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 456              		.loc 1 495 0
 457 0296 0B94     		str	r4, [sp, #44]
 496:Src/main.c    ****   HAL_GPIO_Init(MAX30102_INT_GPIO_Port, &GPIO_InitStruct);
 458              		.loc 1 496 0
 459 0298 09A9     		add	r1, sp, #36
 460 029a 0D48     		ldr	r0, .L3+12
 461 029c FFF7FEFF 		bl	HAL_GPIO_Init
 462              	.LVL23:
 497:Src/main.c    **** 
 498:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 499:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 463              		.loc 1 499 0
 464 02a0 4FF40C63 		mov	r3, #2240
 465 02a4 0993     		str	r3, [sp, #36]
 500:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 466              		.loc 1 500 0
 467 02a6 0A95     		str	r5, [sp, #40]
 501:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 468              		.loc 1 501 0
 469 02a8 0B94     		str	r4, [sp, #44]
ARM GAS  /tmp/ccpwhDhL.s 			page 18


 502:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 470              		.loc 1 502 0
 471 02aa 0C94     		str	r4, [sp, #48]
 503:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 472              		.loc 1 503 0
 473 02ac CDF83480 		str	r8, [sp, #52]
 504:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 474              		.loc 1 504 0
 475 02b0 09A9     		add	r1, sp, #36
 476 02b2 0748     		ldr	r0, .L3+12
 477 02b4 FFF7FEFF 		bl	HAL_GPIO_Init
 478              	.LVL24:
 505:Src/main.c    **** 
 506:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 507:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 479              		.loc 1 507 0
 480 02b8 4FF49863 		mov	r3, #1216
 481 02bc 0993     		str	r3, [sp, #36]
 508:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 482              		.loc 1 508 0
 483 02be 0A95     		str	r5, [sp, #40]
 484 02c0 12E0     		b	.L4
 485              	.L5:
 486 02c2 00BF     		.align	2
 487              	.L3:
 488 02c4 00380240 		.word	1073887232
 489 02c8 00080240 		.word	1073874944
 490 02cc 000C0240 		.word	1073875968
 491 02d0 00180240 		.word	1073879040
 492 02d4 00040240 		.word	1073873920
 493 02d8 00100240 		.word	1073876992
 494 02dc 00000240 		.word	1073872896
 495 02e0 00140240 		.word	1073878016
 496 02e4 00001210 		.word	269615104
 497              	.L4:
 509:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 498              		.loc 1 509 0
 499 02e8 0B94     		str	r4, [sp, #44]
 510:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 500              		.loc 1 510 0
 501 02ea 0C94     		str	r4, [sp, #48]
 511:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 502              		.loc 1 511 0
 503 02ec CDF83480 		str	r8, [sp, #52]
 512:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 504              		.loc 1 512 0
 505 02f0 09A9     		add	r1, sp, #36
 506 02f2 1948     		ldr	r0, .L6
 507 02f4 FFF7FEFF 		bl	HAL_GPIO_Init
 508              	.LVL25:
 513:Src/main.c    **** 
 514:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 515:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 509              		.loc 1 515 0
 510 02f8 4823     		movs	r3, #72
 511 02fa 0993     		str	r3, [sp, #36]
 516:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccpwhDhL.s 			page 19


 512              		.loc 1 516 0
 513 02fc 0A95     		str	r5, [sp, #40]
 517:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 514              		.loc 1 517 0
 515 02fe 0B94     		str	r4, [sp, #44]
 518:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 516              		.loc 1 518 0
 517 0300 0C94     		str	r4, [sp, #48]
 519:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 518              		.loc 1 519 0
 519 0302 CDF83480 		str	r8, [sp, #52]
 520:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 520              		.loc 1 520 0
 521 0306 09A9     		add	r1, sp, #36
 522 0308 1448     		ldr	r0, .L6+4
 523 030a FFF7FEFF 		bl	HAL_GPIO_Init
 524              	.LVL26:
 521:Src/main.c    **** 
 522:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 523:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 525              		.loc 1 523 0
 526 030e 4FF4A053 		mov	r3, #5120
 527 0312 0993     		str	r3, [sp, #36]
 524:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 528              		.loc 1 524 0
 529 0314 0A95     		str	r5, [sp, #40]
 525:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 530              		.loc 1 525 0
 531 0316 0B94     		str	r4, [sp, #44]
 526:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 532              		.loc 1 526 0
 533 0318 0C94     		str	r4, [sp, #48]
 527:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 534              		.loc 1 527 0
 535 031a CDF834A0 		str	r10, [sp, #52]
 528:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 536              		.loc 1 528 0
 537 031e 09A9     		add	r1, sp, #36
 538 0320 0F48     		ldr	r0, .L6+8
 539 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 540              	.LVL27:
 529:Src/main.c    **** 
 530:Src/main.c    ****   /*Configure GPIO pins : LD3_Pin LD4_Pin */
 531:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin|LD4_Pin;
 541              		.loc 1 531 0
 542 0326 4FF4C043 		mov	r3, #24576
 543 032a 0993     		str	r3, [sp, #36]
 532:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 544              		.loc 1 532 0
 545 032c CDF82890 		str	r9, [sp, #40]
 533:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 546              		.loc 1 533 0
 547 0330 0B94     		str	r4, [sp, #44]
 534:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 548              		.loc 1 534 0
 549 0332 0C94     		str	r4, [sp, #48]
 535:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
ARM GAS  /tmp/ccpwhDhL.s 			page 20


 550              		.loc 1 535 0
 551 0334 09A9     		add	r1, sp, #36
 552 0336 0A48     		ldr	r0, .L6+8
 553 0338 FFF7FEFF 		bl	HAL_GPIO_Init
 554              	.LVL28:
 536:Src/main.c    **** 
 537:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 538:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 555              		.loc 1 538 0
 556 033c 6023     		movs	r3, #96
 557 033e 0993     		str	r3, [sp, #36]
 539:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 558              		.loc 1 539 0
 559 0340 0A95     		str	r5, [sp, #40]
 540:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 560              		.loc 1 540 0
 561 0342 0B94     		str	r4, [sp, #44]
 541:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 562              		.loc 1 541 0
 563 0344 0C97     		str	r7, [sp, #48]
 542:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 564              		.loc 1 542 0
 565 0346 0D96     		str	r6, [sp, #52]
 543:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 566              		.loc 1 543 0
 567 0348 09A9     		add	r1, sp, #36
 568 034a 0648     		ldr	r0, .L6+12
 569 034c FFF7FEFF 		bl	HAL_GPIO_Init
 570              	.LVL29:
 544:Src/main.c    **** 
 545:Src/main.c    **** }
 571              		.loc 1 545 0
 572 0350 0FB0     		add	sp, sp, #60
 573              	.LCFI2:
 574              		.cfi_def_cfa_offset 36
 575              		@ sp needed
 576 0352 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 577              	.L7:
 578 0356 00BF     		.align	2
 579              	.L6:
 580 0358 00080240 		.word	1073874944
 581 035c 000C0240 		.word	1073875968
 582 0360 00180240 		.word	1073879040
 583 0364 00040240 		.word	1073873920
 584              		.cfi_endproc
 585              	.LFE132:
 587              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 588              		.align	1
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	MX_USART1_UART_Init:
 595              	.LFB131:
 281:Src/main.c    **** 
 596              		.loc 1 281 0
 597              		.cfi_startproc
ARM GAS  /tmp/ccpwhDhL.s 			page 21


 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI3:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
 290:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 605              		.loc 1 290 0
 606 0002 0848     		ldr	r0, .L10
 607 0004 084B     		ldr	r3, .L10+4
 608 0006 0360     		str	r3, [r0]
 291:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 609              		.loc 1 291 0
 610 0008 4FF4E133 		mov	r3, #115200
 611 000c 4360     		str	r3, [r0, #4]
 292:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 612              		.loc 1 292 0
 613 000e 0023     		movs	r3, #0
 614 0010 8360     		str	r3, [r0, #8]
 293:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 615              		.loc 1 293 0
 616 0012 C360     		str	r3, [r0, #12]
 294:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 617              		.loc 1 294 0
 618 0014 0361     		str	r3, [r0, #16]
 295:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 619              		.loc 1 295 0
 620 0016 0C22     		movs	r2, #12
 621 0018 4261     		str	r2, [r0, #20]
 296:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 622              		.loc 1 296 0
 623 001a 8361     		str	r3, [r0, #24]
 297:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 624              		.loc 1 297 0
 625 001c C361     		str	r3, [r0, #28]
 298:Src/main.c    ****   {
 626              		.loc 1 298 0
 627 001e FFF7FEFF 		bl	HAL_UART_Init
 628              	.LVL30:
 306:Src/main.c    **** 
 629              		.loc 1 306 0
 630 0022 08BD     		pop	{r3, pc}
 631              	.L11:
 632              		.align	2
 633              	.L10:
 634 0024 00000000 		.word	huart1
 635 0028 00100140 		.word	1073811456
 636              		.cfi_endproc
 637              	.LFE131:
 639              		.section	.text.MX_I2C3_Init,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv4-sp-d16
 646              	MX_I2C3_Init:
ARM GAS  /tmp/ccpwhDhL.s 			page 22


 647              	.LFB130:
 235:Src/main.c    **** 
 648              		.loc 1 235 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652 0000 38B5     		push	{r3, r4, r5, lr}
 653              	.LCFI4:
 654              		.cfi_def_cfa_offset 16
 655              		.cfi_offset 3, -16
 656              		.cfi_offset 4, -12
 657              		.cfi_offset 5, -8
 658              		.cfi_offset 14, -4
 244:Src/main.c    ****   hi2c3.Init.ClockSpeed = 100000;
 659              		.loc 1 244 0
 660 0002 0D4C     		ldr	r4, .L14
 661 0004 0D4B     		ldr	r3, .L14+4
 662 0006 2360     		str	r3, [r4]
 245:Src/main.c    ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 663              		.loc 1 245 0
 664 0008 0D4B     		ldr	r3, .L14+8
 665 000a 6360     		str	r3, [r4, #4]
 246:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 666              		.loc 1 246 0
 667 000c 0025     		movs	r5, #0
 668 000e A560     		str	r5, [r4, #8]
 247:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 669              		.loc 1 247 0
 670 0010 E560     		str	r5, [r4, #12]
 248:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 671              		.loc 1 248 0
 672 0012 4FF48043 		mov	r3, #16384
 673 0016 2361     		str	r3, [r4, #16]
 249:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 674              		.loc 1 249 0
 675 0018 6561     		str	r5, [r4, #20]
 250:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 676              		.loc 1 250 0
 677 001a A561     		str	r5, [r4, #24]
 251:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 678              		.loc 1 251 0
 679 001c E561     		str	r5, [r4, #28]
 252:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 680              		.loc 1 252 0
 681 001e 2562     		str	r5, [r4, #32]
 253:Src/main.c    ****   {
 682              		.loc 1 253 0
 683 0020 2046     		mov	r0, r4
 684 0022 FFF7FEFF 		bl	HAL_I2C_Init
 685              	.LVL31:
 259:Src/main.c    ****   {
 686              		.loc 1 259 0
 687 0026 2946     		mov	r1, r5
 688 0028 2046     		mov	r0, r4
 689 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 690              	.LVL32:
 265:Src/main.c    ****   {
ARM GAS  /tmp/ccpwhDhL.s 			page 23


 691              		.loc 1 265 0
 692 002e 2946     		mov	r1, r5
 693 0030 2046     		mov	r0, r4
 694 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 695              	.LVL33:
 273:Src/main.c    **** 
 696              		.loc 1 273 0
 697 0036 38BD     		pop	{r3, r4, r5, pc}
 698              	.L15:
 699              		.align	2
 700              	.L14:
 701 0038 00000000 		.word	hi2c3
 702 003c 005C0040 		.word	1073765376
 703 0040 A0860100 		.word	100000
 704              		.cfi_endproc
 705              	.LFE130:
 707              		.section	.text.__io_putchar,"ax",%progbits
 708              		.align	1
 709              		.global	__io_putchar
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu fpv4-sp-d16
 715              	__io_putchar:
 716              	.LFB126:
  77:Src/main.c    ****     HAL_UART_Transmit(&huart1 , (uint8_t *)&ch, 1 , 0xffff);
 717              		.loc 1 77 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 8
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              	.LVL34:
 722 0000 00B5     		push	{lr}
 723              	.LCFI5:
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 14, -4
 726 0002 83B0     		sub	sp, sp, #12
 727              	.LCFI6:
 728              		.cfi_def_cfa_offset 16
 729 0004 02A9     		add	r1, sp, #8
 730 0006 41F8040D 		str	r0, [r1, #-4]!
  78:Src/main.c    **** 
 731              		.loc 1 78 0
 732 000a 4FF6FF73 		movw	r3, #65535
 733 000e 0122     		movs	r2, #1
 734 0010 0348     		ldr	r0, .L18
 735              	.LVL35:
 736 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 737              	.LVL36:
  83:Src/main.c    **** /* USER CODE END PV */
 738              		.loc 1 83 0
 739 0016 0198     		ldr	r0, [sp, #4]
 740 0018 03B0     		add	sp, sp, #12
 741              	.LCFI7:
 742              		.cfi_def_cfa_offset 4
 743              		@ sp needed
 744 001a 5DF804FB 		ldr	pc, [sp], #4
 745              	.L19:
ARM GAS  /tmp/ccpwhDhL.s 			page 24


 746 001e 00BF     		.align	2
 747              	.L18:
 748 0020 00000000 		.word	huart1
 749              		.cfi_endproc
 750              	.LFE126:
 752              		.section	.text._write,"ax",%progbits
 753              		.align	1
 754              		.global	_write
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu fpv4-sp-d16
 760              	_write:
 761              	.LFB127:
  99:Src/main.c    ****     int i = 0; /*
 762              		.loc 1 99 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              	.LVL37:
 767 0000 70B5     		push	{r4, r5, r6, lr}
 768              	.LCFI8:
 769              		.cfi_def_cfa_offset 16
 770              		.cfi_offset 4, -16
 771              		.cfi_offset 5, -12
 772              		.cfi_offset 6, -8
 773              		.cfi_offset 14, -4
 774              	.LVL38:
 105:Src/main.c    ****       { 
 775              		.loc 1 105 0
 776 0002 0228     		cmp	r0, #2
 777 0004 18DC     		bgt	.L25
 778 0006 0C46     		mov	r4, r1
 779 0008 1646     		mov	r6, r2
 100:Src/main.c    ****      * write "len" of char from "ptr" to file id "fd"
 780              		.loc 1 100 0
 781 000a 0025     		movs	r5, #0
 782 000c 01E0     		b	.L22
 783              	.LVL39:
 784              	.L23:
 112:Src/main.c    ****         ptr++; 
 785              		.loc 1 112 0
 786 000e 0135     		adds	r5, r5, #1
 787              	.LVL40:
 113:Src/main.c    ****       } 
 788              		.loc 1 113 0
 789 0010 0134     		adds	r4, r4, #1
 790              	.LVL41:
 791              	.L22:
 105:Src/main.c    ****       { 
 792              		.loc 1 105 0
 793 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 794 0014 93B1     		cbz	r3, .L20
 105:Src/main.c    ****       { 
 795              		.loc 1 105 0 is_stmt 0 discriminator 2
 796 0016 B542     		cmp	r5, r6
 797 0018 10DA     		bge	.L20
ARM GAS  /tmp/ccpwhDhL.s 			page 25


 107:Src/main.c    ****         if (*ptr == '\n') 
 798              		.loc 1 107 0 is_stmt 1
 799 001a 0A23     		movs	r3, #10
 800 001c 0122     		movs	r2, #1
 801 001e 2146     		mov	r1, r4
 802 0020 0748     		ldr	r0, .L27
 803 0022 FFF7FEFF 		bl	HAL_UART_Transmit
 804              	.LVL42:
 108:Src/main.c    ****         { 
 805              		.loc 1 108 0
 806 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 807 0028 0A2B     		cmp	r3, #10
 808 002a F0D1     		bne	.L23
 110:Src/main.c    ****         } 
 809              		.loc 1 110 0
 810 002c 0222     		movs	r2, #2
 811 002e 0549     		ldr	r1, .L27+4
 812 0030 0348     		ldr	r0, .L27
 813 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 814              	.LVL43:
 815 0036 EAE7     		b	.L23
 816              	.LVL44:
 817              	.L25:
 105:Src/main.c    ****       { 
 818              		.loc 1 105 0
 819 0038 4FF0FF35 		mov	r5, #-1
 820              	.LVL45:
 821              	.L20:
 116:Src/main.c    **** /* USER CODE END 0 */
 822              		.loc 1 116 0
 823 003c 2846     		mov	r0, r5
 824 003e 70BD     		pop	{r4, r5, r6, pc}
 825              	.L28:
 826              		.align	2
 827              	.L27:
 828 0040 00000000 		.word	huart1
 829 0044 00000000 		.word	.LC0
 830              		.cfi_endproc
 831              	.LFE127:
 833              		.section	.text.SystemClock_Config,"ax",%progbits
 834              		.align	1
 835              		.global	SystemClock_Config
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv4-sp-d16
 841              	SystemClock_Config:
 842              	.LFB129:
 185:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 843              		.loc 1 185 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 80
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847 0000 30B5     		push	{r4, r5, lr}
 848              	.LCFI9:
 849              		.cfi_def_cfa_offset 12
 850              		.cfi_offset 4, -12
ARM GAS  /tmp/ccpwhDhL.s 			page 26


 851              		.cfi_offset 5, -8
 852              		.cfi_offset 14, -4
 853 0002 95B0     		sub	sp, sp, #84
 854              	.LCFI10:
 855              		.cfi_def_cfa_offset 96
 186:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 856              		.loc 1 186 0
 857 0004 3022     		movs	r2, #48
 858 0006 0021     		movs	r1, #0
 859 0008 08A8     		add	r0, sp, #32
 860 000a FFF7FEFF 		bl	memset
 861              	.LVL46:
 187:Src/main.c    **** 
 862              		.loc 1 187 0
 863 000e 0024     		movs	r4, #0
 864 0010 0394     		str	r4, [sp, #12]
 865 0012 0494     		str	r4, [sp, #16]
 866 0014 0594     		str	r4, [sp, #20]
 867 0016 0694     		str	r4, [sp, #24]
 868 0018 0794     		str	r4, [sp, #28]
 869              	.LBB10:
 191:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 870              		.loc 1 191 0
 871 001a 0194     		str	r4, [sp, #4]
 872 001c 1C4B     		ldr	r3, .L31
 873 001e 1A6C     		ldr	r2, [r3, #64]
 874 0020 42F08052 		orr	r2, r2, #268435456
 875 0024 1A64     		str	r2, [r3, #64]
 876 0026 1B6C     		ldr	r3, [r3, #64]
 877 0028 03F08053 		and	r3, r3, #268435456
 878 002c 0193     		str	r3, [sp, #4]
 879 002e 019B     		ldr	r3, [sp, #4]
 880              	.LBE10:
 881              	.LBB11:
 192:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 882              		.loc 1 192 0
 883 0030 0294     		str	r4, [sp, #8]
 884 0032 184B     		ldr	r3, .L31+4
 885 0034 1A68     		ldr	r2, [r3]
 886 0036 42F44042 		orr	r2, r2, #49152
 887 003a 1A60     		str	r2, [r3]
 888 003c 1B68     		ldr	r3, [r3]
 889 003e 03F44043 		and	r3, r3, #49152
 890 0042 0293     		str	r3, [sp, #8]
 891 0044 029B     		ldr	r3, [sp, #8]
 892              	.LBE11:
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 893              		.loc 1 195 0
 894 0046 0225     		movs	r5, #2
 895 0048 0895     		str	r5, [sp, #32]
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 896              		.loc 1 196 0
 897 004a 0123     		movs	r3, #1
 898 004c 0B93     		str	r3, [sp, #44]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 899              		.loc 1 197 0
 900 004e 1023     		movs	r3, #16
ARM GAS  /tmp/ccpwhDhL.s 			page 27


 901 0050 0C93     		str	r3, [sp, #48]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 902              		.loc 1 198 0
 903 0052 0E95     		str	r5, [sp, #56]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 904              		.loc 1 199 0
 905 0054 0F94     		str	r4, [sp, #60]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 180;
 906              		.loc 1 200 0
 907 0056 0823     		movs	r3, #8
 908 0058 1093     		str	r3, [sp, #64]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 909              		.loc 1 201 0
 910 005a B423     		movs	r3, #180
 911 005c 1193     		str	r3, [sp, #68]
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 912              		.loc 1 202 0
 913 005e 1295     		str	r5, [sp, #72]
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 914              		.loc 1 203 0
 915 0060 0723     		movs	r3, #7
 916 0062 1393     		str	r3, [sp, #76]
 204:Src/main.c    ****   {
 917              		.loc 1 204 0
 918 0064 08A8     		add	r0, sp, #32
 919 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 920              	.LVL47:
 210:Src/main.c    ****   {
 921              		.loc 1 210 0
 922 006a FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 923              	.LVL48:
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 924              		.loc 1 216 0
 925 006e 0F23     		movs	r3, #15
 926 0070 0393     		str	r3, [sp, #12]
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 927              		.loc 1 218 0
 928 0072 0495     		str	r5, [sp, #16]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 929              		.loc 1 219 0
 930 0074 0594     		str	r4, [sp, #20]
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 931              		.loc 1 220 0
 932 0076 4FF4A053 		mov	r3, #5120
 933 007a 0693     		str	r3, [sp, #24]
 221:Src/main.c    **** 
 934              		.loc 1 221 0
 935 007c 4FF48053 		mov	r3, #4096
 936 0080 0793     		str	r3, [sp, #28]
 223:Src/main.c    ****   {
 937              		.loc 1 223 0
 938 0082 0521     		movs	r1, #5
 939 0084 03A8     		add	r0, sp, #12
 940 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 941              	.LVL49:
 227:Src/main.c    **** 
 942              		.loc 1 227 0
ARM GAS  /tmp/ccpwhDhL.s 			page 28


 943 008a 15B0     		add	sp, sp, #84
 944              	.LCFI11:
 945              		.cfi_def_cfa_offset 12
 946              		@ sp needed
 947 008c 30BD     		pop	{r4, r5, pc}
 948              	.L32:
 949 008e 00BF     		.align	2
 950              	.L31:
 951 0090 00380240 		.word	1073887232
 952 0094 00700040 		.word	1073770496
 953              		.cfi_endproc
 954              	.LFE129:
 956              		.section	.text.print_float,"ax",%progbits
 957              		.align	1
 958              		.global	print_float
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 962              		.fpu fpv4-sp-d16
 964              	print_float:
 965              	.LFB133:
 546:Src/main.c    **** 
 547:Src/main.c    **** /* USER CODE BEGIN 4 */
 548:Src/main.c    **** void print_float(float value)
 549:Src/main.c    **** {
 966              		.loc 1 549 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              	.LVL50:
 971 0000 70B5     		push	{r4, r5, r6, lr}
 972              	.LCFI12:
 973              		.cfi_def_cfa_offset 16
 974              		.cfi_offset 4, -16
 975              		.cfi_offset 5, -12
 976              		.cfi_offset 6, -8
 977              		.cfi_offset 14, -4
 978 0002 82B0     		sub	sp, sp, #8
 979              	.LCFI13:
 980              		.cfi_def_cfa_offset 24
 550:Src/main.c    **** 
 551:Src/main.c    ****   int tmp,tmp1,tmp2,tmp3;
 552:Src/main.c    **** 
 553:Src/main.c    ****   tmp = (int)value;
 981              		.loc 1 553 0
 982 0004 BDEEC07A 		vcvt.s32.f32	s14, s0
 983              	.LVL51:
 554:Src/main.c    **** 
 555:Src/main.c    ****   tmp1=(int)((value-tmp)*10)%10;
 984              		.loc 1 555 0
 985 0008 F8EEC77A 		vcvt.f32.s32	s15, s14
 986 000c 30EE670A 		vsub.f32	s0, s0, s15
 987              	.LVL52:
 988 0010 F2EE047A 		vmov.f32	s15, #1.0e+1
 989 0014 60EE277A 		vmul.f32	s15, s0, s15
 990 0018 FDEEE77A 		vcvt.s32.f32	s15, s15
 991 001c 17EE902A 		vmov	r2, s15	@ int
ARM GAS  /tmp/ccpwhDhL.s 			page 29


 992 0020 1948     		ldr	r0, .L35
 993 0022 80FB0231 		smull	r3, r1, r0, r2
 994 0026 D317     		asrs	r3, r2, #31
 995 0028 C3EBA103 		rsb	r3, r3, r1, asr #2
 996 002c 03EB8303 		add	r3, r3, r3, lsl #2
 997 0030 5D00     		lsls	r5, r3, #1
 998              	.LVL53:
 556:Src/main.c    **** 
 557:Src/main.c    ****   tmp2=(int)((value-tmp)*100)%10;
 999              		.loc 1 557 0
 1000 0032 DFED167A 		vldr.32	s15, .L35+4
 1001 0036 60EE277A 		vmul.f32	s15, s0, s15
 1002 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 1003 003e 17EE903A 		vmov	r3, s15	@ int
 1004 0042 80FB0314 		smull	r1, r4, r0, r3
 1005 0046 D917     		asrs	r1, r3, #31
 1006 0048 C1EBA401 		rsb	r1, r1, r4, asr #2
 1007 004c 01EB8101 		add	r1, r1, r1, lsl #2
 1008 0050 4E00     		lsls	r6, r1, #1
 1009              	.LVL54:
 558:Src/main.c    **** 
 559:Src/main.c    ****   tmp3=(int)((value-tmp)*1000)%10;
 1010              		.loc 1 559 0
 1011 0052 DFED0F7A 		vldr.32	s15, .L35+8
 1012 0056 20EE270A 		vmul.f32	s0, s0, s15
 1013 005a FDEEC07A 		vcvt.s32.f32	s15, s0
 1014 005e 17EE901A 		vmov	r1, s15	@ int
 1015 0062 80FB0104 		smull	r0, r4, r0, r1
 1016 0066 C817     		asrs	r0, r1, #31
 1017 0068 C0EBA400 		rsb	r0, r0, r4, asr #2
 1018 006c 00EB8000 		add	r0, r0, r0, lsl #2
 1019 0070 4400     		lsls	r4, r0, #1
 1020 0072 081B     		subs	r0, r1, r4
 1021              	.LVL55:
 560:Src/main.c    **** 
 561:Src/main.c    ****   printf("%d.%d%d%d\n", tmp,tmp1,tmp2,tmp3);
 1022              		.loc 1 561 0
 1023 0074 0090     		str	r0, [sp]
 1024 0076 9B1B     		subs	r3, r3, r6
 1025              	.LVL56:
 1026 0078 521B     		subs	r2, r2, r5
 1027              	.LVL57:
 1028 007a 17EE101A 		vmov	r1, s14	@ int
 1029 007e 0548     		ldr	r0, .L35+12
 1030              	.LVL58:
 1031 0080 FFF7FEFF 		bl	printf
 1032              	.LVL59:
 562:Src/main.c    **** 
 563:Src/main.c    **** }
 1033              		.loc 1 563 0
 1034 0084 02B0     		add	sp, sp, #8
 1035              	.LCFI14:
 1036              		.cfi_def_cfa_offset 16
 1037              		@ sp needed
 1038 0086 70BD     		pop	{r4, r5, r6, pc}
 1039              	.LVL60:
 1040              	.L36:
ARM GAS  /tmp/ccpwhDhL.s 			page 30


 1041              		.align	2
 1042              	.L35:
 1043 0088 67666666 		.word	1717986919
 1044 008c 0000C842 		.word	1120403456
 1045 0090 00007A44 		.word	1148846080
 1046 0094 00000000 		.word	.LC1
 1047              		.cfi_endproc
 1048              	.LFE133:
 1050              		.section	.text.main,"ax",%progbits
 1051              		.align	1
 1052              		.global	main
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1056              		.fpu fpv4-sp-d16
 1058              	main:
 1059              	.LFB128:
 124:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1060              		.loc 1 124 0
 1061              		.cfi_startproc
 1062              		@ Volatile: function does not return.
 1063              		@ args = 0, pretend = 0, frame = 8
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065 0000 00B5     		push	{lr}
 1066              	.LCFI15:
 1067              		.cfi_def_cfa_offset 4
 1068              		.cfi_offset 14, -4
 1069 0002 83B0     		sub	sp, sp, #12
 1070              	.LCFI16:
 1071              		.cfi_def_cfa_offset 16
 126:Src/main.c    ****   uint8_t uc_dumpy;
 1072              		.loc 1 126 0
 1073 0004 0023     		movs	r3, #0
 1074 0006 0193     		str	r3, [sp, #4]	@ float
 133:Src/main.c    **** 
 1075              		.loc 1 133 0
 1076 0008 FFF7FEFF 		bl	HAL_Init
 1077              	.LVL61:
 140:Src/main.c    **** 
 1078              		.loc 1 140 0
 1079 000c FFF7FEFF 		bl	SystemClock_Config
 1080              	.LVL62:
 147:Src/main.c    ****   MX_USART1_UART_Init();
 1081              		.loc 1 147 0
 1082 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1083              	.LVL63:
 148:Src/main.c    ****   MX_I2C3_Init();
 1084              		.loc 1 148 0
 1085 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 1086              	.LVL64:
 149:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1087              		.loc 1 149 0
 1088 0018 FFF7FEFF 		bl	MX_I2C3_Init
 1089              	.LVL65:
 151:Src/main.c    ****   maxim_max30102_reset();
 1090              		.loc 1 151 0
 1091 001c 0120     		movs	r0, #1
ARM GAS  /tmp/ccpwhDhL.s 			page 31


 1092 001e FFF7FEFF 		bl	HAL_Delay
 1093              	.LVL66:
 152:Src/main.c    ****   maxim_max30102_read_reg(0, &uc_dumpy);  //read and clear status register
 1094              		.loc 1 152 0
 1095 0022 FFF7FEFF 		bl	maxim_max30102_reset
 1096              	.LVL67:
 153:Src/main.c    ****   maxim_max30102_init();
 1097              		.loc 1 153 0
 1098 0026 0DF10301 		add	r1, sp, #3
 1099 002a 0020     		movs	r0, #0
 1100 002c FFF7FEFF 		bl	maxim_max30102_read_reg
 1101              	.LVL68:
 154:Src/main.c    ****   // if(!maxim_max30102_init())  Error_Handler();
 1102              		.loc 1 154 0
 1103 0030 FFF7FEFF 		bl	maxim_max30102_init
 1104              	.LVL69:
 1105              	.L38:
 166:Src/main.c    ****     temp_value = maxim_max30102_read_temperature();
 1106              		.loc 1 166 0 discriminator 1
 1107 0034 0A20     		movs	r0, #10
 1108 0036 FFF7FEFF 		bl	HAL_Delay
 1109              	.LVL70:
 167:Src/main.c    ****     HAL_UART_Transmit(&huart1, "s\r\n", 4, 10);
 1110              		.loc 1 167 0 discriminator 1
 1111 003a FFF7FEFF 		bl	maxim_max30102_read_temperature
 1112              	.LVL71:
 1113 003e 02AD     		add	r5, sp, #8
 1114 0040 25ED010A 		vstmdb.32	r5!, {s0}
 168:Src/main.c    ****     HAL_UART_Transmit(&huart1, &temp_value, sizeof(temp_value), 10);
 1115              		.loc 1 168 0 discriminator 1
 1116 0044 0E4C     		ldr	r4, .L40
 1117 0046 0A23     		movs	r3, #10
 1118 0048 0422     		movs	r2, #4
 1119 004a 0E49     		ldr	r1, .L40+4
 1120 004c 2046     		mov	r0, r4
 1121 004e FFF7FEFF 		bl	HAL_UART_Transmit
 1122              	.LVL72:
 169:Src/main.c    ****     HAL_UART_Transmit(&huart1, "e\r\n", 4, 10);
 1123              		.loc 1 169 0 discriminator 1
 1124 0052 0A23     		movs	r3, #10
 1125 0054 0422     		movs	r2, #4
 1126 0056 2946     		mov	r1, r5
 1127 0058 2046     		mov	r0, r4
 1128 005a FFF7FEFF 		bl	HAL_UART_Transmit
 1129              	.LVL73:
 170:Src/main.c    ****     // temp_value = 20.0112343434;
 1130              		.loc 1 170 0 discriminator 1
 1131 005e 0A23     		movs	r3, #10
 1132 0060 0422     		movs	r2, #4
 1133 0062 0949     		ldr	r1, .L40+8
 1134 0064 2046     		mov	r0, r4
 1135 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 1136              	.LVL74:
 172:Src/main.c    ****     print_float(temp_value);
 1137              		.loc 1 172 0 discriminator 1
 1138 006a 0848     		ldr	r0, .L40+12
 1139 006c FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccpwhDhL.s 			page 32


 1140              	.LVL75:
 173:Src/main.c    ****     printf("---------\r\n");
 1141              		.loc 1 173 0 discriminator 1
 1142 0070 9DED010A 		vldr.32	s0, [sp, #4]
 1143 0074 FFF7FEFF 		bl	print_float
 1144              	.LVL76:
 174:Src/main.c    **** 
 1145              		.loc 1 174 0 discriminator 1
 1146 0078 0548     		ldr	r0, .L40+16
 1147 007a FFF7FEFF 		bl	puts
 1148              	.LVL77:
 1149 007e D9E7     		b	.L38
 1150              	.L41:
 1151              		.align	2
 1152              	.L40:
 1153 0080 00000000 		.word	huart1
 1154 0084 00000000 		.word	.LC2
 1155 0088 04000000 		.word	.LC3
 1156 008c 08000000 		.word	.LC4
 1157 0090 18000000 		.word	.LC5
 1158              		.cfi_endproc
 1159              	.LFE128:
 1161              		.section	.text.Error_Handler,"ax",%progbits
 1162              		.align	1
 1163              		.global	Error_Handler
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv4-sp-d16
 1169              	Error_Handler:
 1170              	.LFB134:
 564:Src/main.c    **** /* USER CODE END 4 */
 565:Src/main.c    **** 
 566:Src/main.c    **** /**
 567:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 568:Src/main.c    ****   * @retval None
 569:Src/main.c    ****   */
 570:Src/main.c    **** void Error_Handler(void)
 571:Src/main.c    **** {
 1171              		.loc 1 571 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 572:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 573:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 574:Src/main.c    **** 
 575:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 576:Src/main.c    **** }
 1176              		.loc 1 576 0
 1177 0000 7047     		bx	lr
 1178              		.cfi_endproc
 1179              	.LFE134:
 1181              		.comm	huart1,64,4
 1182              		.comm	hi2c3,84,4
 1183              		.section	.rodata._write.str1.4,"aMS",%progbits,1
 1184              		.align	2
ARM GAS  /tmp/ccpwhDhL.s 			page 33


 1185              	.LC0:
 1186 0000 0D00     		.ascii	"\015\000"
 1187              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1188              		.align	2
 1189              	.LC2:
 1190 0000 730D0A00 		.ascii	"s\015\012\000"
 1191              	.LC3:
 1192 0004 650D0A00 		.ascii	"e\015\012\000"
 1193              	.LC4:
 1194 0008 54656D70 		.ascii	"Temperature =  \000"
 1194      65726174 
 1194      75726520 
 1194      3D202000 
 1195              	.LC5:
 1196 0018 2D2D2D2D 		.ascii	"---------\015\000"
 1196      2D2D2D2D 
 1196      2D0D00
 1197              		.section	.rodata.print_float.str1.4,"aMS",%progbits,1
 1198              		.align	2
 1199              	.LC1:
 1200 0000 25642E25 		.ascii	"%d.%d%d%d\012\000"
 1200      64256425 
 1200      640A00
 1201              		.text
 1202              	.Letext0:
 1203              		.file 2 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.h"
 1204              		.file 3 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1205              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1206              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1207              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1208              		.file 7 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1209              		.file 8 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1210              		.file 9 "/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1211              		.file 10 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1212              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1213              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1214              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1215              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1216              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1217              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1218              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1219              		.file 18 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 1220              		.file 19 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 1221              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c_ex.h"
 1222              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 1223              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1224              		.file 23 "Inc/MAX30102.h"
 1225              		.file 24 "<built-in>"
ARM GAS  /tmp/ccpwhDhL.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccpwhDhL.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccpwhDhL.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccpwhDhL.s:488    .text.MX_GPIO_Init:00000000000002c4 $d
     /tmp/ccpwhDhL.s:499    .text.MX_GPIO_Init:00000000000002e8 $t
     /tmp/ccpwhDhL.s:580    .text.MX_GPIO_Init:0000000000000358 $d
     /tmp/ccpwhDhL.s:588    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccpwhDhL.s:594    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccpwhDhL.s:634    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccpwhDhL.s:640    .text.MX_I2C3_Init:0000000000000000 $t
     /tmp/ccpwhDhL.s:646    .text.MX_I2C3_Init:0000000000000000 MX_I2C3_Init
     /tmp/ccpwhDhL.s:701    .text.MX_I2C3_Init:0000000000000038 $d
                            *COM*:0000000000000054 hi2c3
     /tmp/ccpwhDhL.s:708    .text.__io_putchar:0000000000000000 $t
     /tmp/ccpwhDhL.s:715    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccpwhDhL.s:748    .text.__io_putchar:0000000000000020 $d
     /tmp/ccpwhDhL.s:753    .text._write:0000000000000000 $t
     /tmp/ccpwhDhL.s:760    .text._write:0000000000000000 _write
     /tmp/ccpwhDhL.s:828    .text._write:0000000000000040 $d
     /tmp/ccpwhDhL.s:834    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccpwhDhL.s:841    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccpwhDhL.s:951    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccpwhDhL.s:957    .text.print_float:0000000000000000 $t
     /tmp/ccpwhDhL.s:964    .text.print_float:0000000000000000 print_float
     /tmp/ccpwhDhL.s:1043   .text.print_float:0000000000000088 $d
     /tmp/ccpwhDhL.s:1051   .text.main:0000000000000000 $t
     /tmp/ccpwhDhL.s:1058   .text.main:0000000000000000 main
     /tmp/ccpwhDhL.s:1153   .text.main:0000000000000080 $d
     /tmp/ccpwhDhL.s:1162   .text.Error_Handler:0000000000000000 $t
     /tmp/ccpwhDhL.s:1169   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccpwhDhL.s:1184   .rodata._write.str1.4:0000000000000000 $d
     /tmp/ccpwhDhL.s:1188   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccpwhDhL.s:1198   .rodata.print_float.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Transmit
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
printf
HAL_Init
HAL_Delay
maxim_max30102_reset
maxim_max30102_read_reg
maxim_max30102_init
maxim_max30102_read_temperature
puts
